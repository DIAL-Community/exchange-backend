<?xml version='1.1' encoding='UTF-8'?>
<project>
  <actions/>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.StringParameterDefinition>
          <name>AUTH_TOKEN</name>
          <description>Digital Ocean authorization token</description>
          <defaultValue></defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>ORG_ID</name>
          <description>Organization ID - used as prefix for machine</description>
          <defaultValue>DIAL</defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>PROVIDER</name>
          <description>Digital Ocean (DO) or AWS</description>
          <defaultValue>DO</defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>SECRET_KEY</name>
          <description>Secret key for AWS</description>
          <defaultValue></defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM" plugin="git@3.10.0">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <url>https://github.com/OpenSRP/docker-builds</url>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>*/29-update-couchdb-and-debian</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <submoduleCfg class="list"/>
    <extensions/>
  </scm>
  <canRoam>true</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers/>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.tasks.Shell>
      <command>export POSTGRES_OPENSRP_TABLESPACE_DIR=/opt/postgresql
export POSTGRES_OPENSRP_DATABASE=opensrp
export POSTGRES_OPENSRP_USER=opensrp_admin
export POSTGRES_OPENSRP_PASSWORD=admin
export MYSQL_ROOT_PASSWORD=mypassword
export MYSQL_MOTECH_DATABASE=motechquartz
export MYSQL_REPORTING_DATABASE=report
export MYSQL_ANM_DATABASE=anm
export MYSQL_OPENMRS_USER=openmrs
export MYSQL_OPENMRS_PASSWORD=openmrs
export MYSQL_OPENMRS_DATABASE=openmrs
export MYSQL_OPENSRP_USER=opensrp
export MYSQL_OPENSRP_PASSWORD=opensrp
export MYSQL_OPENSRP_DATABASE=opensrp
export COUCHDB_USER=rootuser
export COUCHDB_PASSWORD=adminpass
export REDIS_PASSWORD=reallylongreallylongpassword
export OPENSRP_SERVER_TAG=master

cd composed

docker -v &amp;&amp; docker-compose -v &amp;&amp; docker-machine -v

MACHINE_NAME=$ORG_ID&quot;-opensrp&quot;
 
# set-up: clean up any previous machine failures
docker-machine stop $MACHINE_NAME || {
  docker-machine rm -y $MACHINE_NAME || echo &quot;Nothing to destroy&quot;
  docker-machine create --driver digitalocean --digitalocean-access-token $AUTH_TOKEN --digitalocean-tags t4dlaunched --digitalocean-size 4gb $MACHINE_NAME
}
 
# use docker-machine to create and configure &apos;test&apos; environment
# add a -D (debug) if having issues
docker-machine start $MACHINE_NAME || echo &quot;container started&quot;

IPADDRESS=&quot;$(docker-machine ip $MACHINE_NAME)&quot;

eval $(docker-machine env --shell sh $MACHINE_NAME)
 
docker-compose pull
docker-compose up -d

# The last line of the build output should always be the docker-machine IP
# This will be used by the T4D app to give the user a link

echo &quot;opensrp instance: &quot;
docker-machine ip $MACHINE_NAME</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers/>
</project>