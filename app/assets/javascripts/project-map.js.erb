var mapOfProject = {

  map : {},
  projects: {},
  countries: {},
  projectsByCountry: {},

  countryStyle: new ol.style.Style({
    fill: new ol.style.Fill({
      color: 'rgba(45,115,199, 0.5)',
    }),
    stroke: new ol.style.Stroke({
      color:   'rgba(45,115,199, 1.0)',
      width: 2
    }),
    text: new ol.style.Text({
      font: '12px Calibri,sans-serif',
      fill: new ol.style.Fill({
        color: '#fff'
      }),
      stroke: new ol.style.Stroke({
        color: '#000',
        width: 3
      })
    }),
  }),

  countryHighlightStyle: new ol.style.Style({
    stroke: new ol.style.Stroke({
      color: '#ff9d2d',
      width: 2
    }),
    fill: new ol.style.Fill({
      color: 'rgba(256,157,45,0.5)',
    }),
    text: new ol.style.Text({
      font: '12px Calibri,sans-serif',
      fill: new ol.style.Fill({
        color: '#fff'
      }),
      stroke: new ol.style.Stroke({
        color: '#000',
        width: 3
      })
    }),
  }),

  countryHightlightLayer: new ol.layer.Vector({
    source: new ol.source.Vector(),
    map: this.map,
    style: function(feature) {
      mapOfProject.countryHighlightStyle.getText().setText(feature.get('NAME_0'));
      return mapOfProject.countryHighlightStyle;
    }
  }),

  countryLayer: new ol.layer.Vector({
    source: new ol.source.Vector({
      url: "<%= asset_path('countries.json') %>",
      format: new ol.format.GeoJSON()
    }),
    style: function(feature) {
      mapOfProject.countryStyle.getText().setText(feature.get('NAME_0'));
      return mapOfProject.countryStyle;
    }
  }),

  initMap: function() {
    mapOfProject.countryHightlightLayer.getSource().clear()
    mapOfProject.popup = new ol.Overlay({
      element: document.getElementById('popup')
    });

    mapOfProject.map = new ol.Map({
      target: 'map-of-project',
      layers: [
        mapOfProject.countryLayer,
        mapOfProject.countryHightlightLayer
      ],
      overlays: [mapOfProject.popup],
      view: new ol.View({
        center: ol.proj.fromLonLat([10, 20.3]),
        zoom: 2,
        maxZoom: 10,
        minZoom: 2
      })
    });

    mapOfProject.map.on('click', mapOfProjectClickHandler);
  },

  initCountries: function(mapDisplay) {
    $.getJSON('/countries.json?without_paging=true', function(countries) {
      countries.forEach(function(country) {
        mapOfProject.countries[country.id] = country;
      });
      mapOfProject.initProjects(mapDisplay);
    });
  },

  initProjects: function(mapDisplay) {
    var url='/projects.json?without_paging=true';
    if (mapDisplay == 'covid') {
      url = 'projects.json?without_paging=true&origin=unicef_covid'
    }

    $.getJSON(url, function(projects) {
      projects
        .forEach(function(project) {
          const normalized = {
            id: project.id,
            name: project.name,
            slug: project.slug,
            organizations: project.organizations,
            countries: project.countries
          }

          const option = new Option(project.name, project.id);
          $(option).html(project.name);
          $('#project-selector').append(option);

          mapOfProject.projects[normalized.id] = normalized;
          project.countries && project.countries.forEach(function(country) {
            const countries = mapOfProject.projectsByCountry[country.name] || []
            countries.push(normalized.id);
            mapOfProject.projectsByCountry[country.name] = countries;
          });
        });
      
      // Highlight our initial country list.
      highlightProjectCountries(Object.keys(mapOfProject.projectsByCountry));
      $("#loading-spinner").hide();
    });
  },

  init: function(mapDisplay) {
    $("#map-of-project").empty();
    mapOfProject.initMap();
    mapOfProject.initCountries(mapDisplay);
  },
};

function highlightProjectCountries(countries) {
  countries.forEach(function(country) {
    mapOfProject.countryLayer.getSource().forEachFeature(function(projectFeature) {
      if (country == projectFeature.get('NAME_0')) {
        mapOfProject.countryHightlightLayer.getSource().addFeature(new ol.Feature({
          name: projectFeature.get("NAME_0"),
          coordinate: projectFeature.get("coordinate"),
          geometry: projectFeature.get("geometry"),
          projects: mapOfProject.projectsByCountry[country]
        }));
      }
    });
  });
}

function mapOfProjectClickHandler(evt) {
  var projectFeature = mapOfProject.map.forEachFeatureAtPixel(
    evt.pixel,
    function(ft, layer) {
      if (layer == mapOfProject.countryHightlightLayer) {
        return ft;
      }
    }
  );
  if (projectFeature) {
    const element = mapOfProject.popup.element;
    const projectIds = projectFeature.get("projects");
    if (projectIds.length == 1) {
      const project = mapOfProject.projects[projectIds[0]];
      const content =
        `<div class="card map-popup" style="bottom: -6.5rem; padding: 0">
          <h6 class="card-header py-2 px-2">${project.name}</h6>
          <p class="py-2 px-2 mb-0">
            <a href="/projects/${project.slug}"><small>View project</small></a> <br />
          </p>
        </div>`;
      $(element).html(content);
    } else {
      const contentDiv = $('<div class="card map-popup" style="overflow: hidden; max-height: 20rem; bottom: -7rem; padding: 0"/>');
      
      const contentHeader = $('<h6 class="card-header py-2 px-2">' + projectIds.length + ' Projects</h6>');
      contentDiv.append(contentHeader);

      const projectElements = $('<div class="list-group" style="overflow-y: auto;" />');
      contentDiv.append(projectElements);
      
      projectIds.forEach(function (aggregatorId) {
        const project = mapOfProject.projects[aggregatorId];
        const orgInfo = $('<div class="list-group-item list-group-item-action py-2 px-2" />');
        
        orgInfo.click(function() {
          $(this).parents(".list-group").find('.org-details').hide();
          $(this).find('.org-details').show();
        });

        orgInfo.append(`<strong>${project.name}</strong>`);
        orgInfo.append(`<p class="org-details mb-0" style="display:none">
                          <small>
                            <a href="/projects/${project.slug}">View project</a> <br />
                          </small>
                        </p>`)
        projectElements.append(orgInfo);
      });
      $(element).empty();
      $(element).append(contentDiv);
    }

    mapOfProject.popup.setPosition(evt.coordinate);
  } else {
    mapOfProject.popup.setPosition(undefined);
  }
};
